/*
 *    Copyright (C) 2012 Hai Bison
 *
 *    See the file LICENSE at the root directory of this project for copying
 *    permission.
 */

package group.pals.desktop.app.apksigner.ui.prefs

import group.pals.desktop.app.apksigner.i18n.Messages
import group.pals.desktop.app.apksigner.i18n.R
import group.pals.desktop.app.apksigner.utils.Preferences
import group.pals.desktop.app.apksigner.utils.Texts
import group.pals.desktop.app.apksigner.utils.ui.Dlg
import group.pals.desktop.app.apksigner.utils.ui.JEditorPopupMenu

import java.awt.GridBagConstraints
import java.awt.GridBagLayout
import java.awt.Insets

import javax.swing.JCheckBox
import javax.swing.JPanel
import javax.swing.JPasswordField
import javax.swing.JTextField
import javax.swing.border.TitledBorder

class PanelInternetConnection extends JPanel with PreferencesFrame {

    /**
     * Auto-generated by Eclipse.
     */
    private lazy final val serialVersionUID = 9066934128887563275L

    /*
     * CONTROLS
     */

    private var mTextProxyHost: JTextField = null
    private var mTextProxyPort: JTextField = null
    private var mTextProxyUsername: JTextField = null
    private var mTextProxyPassword: JPasswordField = null
    private var mChkUseProxy: JCheckBox = null

    /*
     * INITIALIZATION
     */

    var gridBagLayout = new GridBagLayout()
    gridBagLayout.columnWidths = Array(0, 0)
    gridBagLayout.rowHeights = Array(0, 0)
    gridBagLayout.columnWeights = Array(1d, Double.MIN_VALUE)
    gridBagLayout.rowWeights = Array(1d, Double.MIN_VALUE)
    setLayout(gridBagLayout)

    var panel = new JPanel()
    var gbc_panel = new GridBagConstraints()
    gbc_panel.fill = GridBagConstraints.BOTH
    gbc_panel.gridx = 0
    gbc_panel.gridy = 0
    add(panel, gbc_panel)
    var gbl_panel = new GridBagLayout()
    gbl_panel.columnWidths = Array(0, 0, 0)
    gbl_panel.rowHeights = Array(0, 0, 0, 0)
    gbl_panel.columnWeights = Array(1d, 1d, Double.MIN_VALUE)
    gbl_panel.rowWeights = Array(0d, 0d, 0d, Double.MIN_VALUE)
    panel.setLayout(gbl_panel)

    mChkUseProxy = new JCheckBox(Messages.getString(R.string.use_proxy))
    mChkUseProxy.setSelected(Preferences.instance.usingProxy)
    var gbc_mChkUseProxy = new GridBagConstraints()
    gbc_mChkUseProxy.anchor = GridBagConstraints.WEST
    gbc_mChkUseProxy.insets = new Insets(10, 5, 5, 5)
    gbc_mChkUseProxy.gridx = 0
    gbc_mChkUseProxy.gridy = 0
    panel.add(mChkUseProxy, gbc_mChkUseProxy)

    mTextProxyHost = new JTextField()
    mTextProxyHost.setBorder(new TitledBorder(
        null, Messages.getString(R.string.host), TitledBorder.LEADING,
        TitledBorder.TOP, null, null))
    mTextProxyHost.setText(Preferences.instance.proxyHost)
    var gbc_mTextProxyHost = new GridBagConstraints()
    gbc_mTextProxyHost.insets = new Insets(3, 3, 3, 3)
    gbc_mTextProxyHost.fill = GridBagConstraints.HORIZONTAL
    gbc_mTextProxyHost.gridx = 0
    gbc_mTextProxyHost.gridy = 1
    panel.add(mTextProxyHost, gbc_mTextProxyHost)
    mTextProxyHost.setColumns(10)

    mTextProxyPort = new JTextField()
    mTextProxyPort.setBorder(new TitledBorder(
        null, Messages.getString(R.string.port), TitledBorder.LEADING,
        TitledBorder.TOP, null, null))
    mTextProxyPort.setText(Preferences.instance.proxyPort.toString())
    var gbc_mTextProxyPort = new GridBagConstraints()
    gbc_mTextProxyPort.insets = new Insets(3, 3, 3, 3)
    gbc_mTextProxyPort.fill = GridBagConstraints.HORIZONTAL
    gbc_mTextProxyPort.gridx = 1
    gbc_mTextProxyPort.gridy = 1
    panel.add(mTextProxyPort, gbc_mTextProxyPort)
    mTextProxyPort.setColumns(10)

    mTextProxyUsername = new JTextField()
    mTextProxyUsername.setBorder(new TitledBorder(
        null, Messages.getString(R.string.username), TitledBorder.LEADING,
        TitledBorder.TOP, null, null))
    mTextProxyUsername.setText(Preferences.instance.proxyUsername)
    var gbc_mTextProxyUsername = new GridBagConstraints()
    gbc_mTextProxyUsername.insets = new Insets(3, 3, 3, 3)
    gbc_mTextProxyUsername.fill = GridBagConstraints.HORIZONTAL
    gbc_mTextProxyUsername.gridx = 0
    gbc_mTextProxyUsername.gridy = 2
    panel.add(mTextProxyUsername, gbc_mTextProxyUsername)
    mTextProxyUsername.setColumns(10)

    mTextProxyPassword = new JPasswordField()
    mTextProxyPassword.setBorder(new TitledBorder(
        null, Messages.getString(R.string.password), TitledBorder.LEADING,
        TitledBorder.TOP, null, null))
    char[] proxyPassword = Preferences.instance.proxyPassword
    mTextProxyPassword.setText(
        if (proxyPassword != null) new String(proxyPassword) else null)
    var gbc_mTextProxyPassword = new GridBagConstraints()
    gbc_mTextProxyPassword.insets = new Insets(3, 3, 3, 3)
    gbc_mTextProxyPassword.fill = GridBagConstraints.HORIZONTAL
    gbc_mTextProxyPassword.gridx = 1
    gbc_mTextProxyPassword.gridy = 2
    panel.add(mTextProxyPassword, gbc_mTextProxyPassword)

    JEditorPopupMenu.apply(this)

    override def store(): Boolean = {
        Preferences.instance.usingProxy = mChkUseProxy.isSelected()
        if (mChkUseProxy.isSelected()) {
            /*
             * HOST
             */
            if (Texts.isEmpty(mTextProxyHost.getText().trim())) {
                mTextProxyHost.requestFocus()
                mTextProxyHost.selectAll()
                Dlg.showErrMsgAsync(Messages.getString(R.string.msg_invalid_proxy_host))
                return false
            }
            Preferences.instance.proxyHost = mTextProxyHost.getText().trim()

            /*
             * PORT
             */
            if (!mTextProxyPort.getText().matches("[0-9]+")) {
                mTextProxyPort.requestFocus()
                mTextProxyPort.selectAll()
                Dlg.showErrMsgAsync(Messages.getString(R.string.msg_invalid_proxy_port))
                return false
            }
            Preferences.instance.proxyPort = mTextProxyPort.getText().trim().toInt

            /*
             * USERNAME
             */
            Preferences.instance.proxyUsername = mTextProxyUsername.getText().trim()

            /*
             * PASSWORD
             */
            Preferences.instance.proxyPassword = mTextProxyPassword.getPassword()
        }

        true
    }// store()

}
